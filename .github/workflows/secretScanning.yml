name: Test Simulated API Key Leak Detection

on: 
  push:
    branches:
      - DEV

jobs:
  simulate-api-leak:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Simulate API key leak (mock API request)
      run: |
        # Simulate a "leak" by sending a request to a mock API
        curl -sSL "https://mockbin.org/bin/your-generated-bin-id" > response.json
        cat response.json

    - name: Install Gitleaks
      run: |
        # Correct URL to download the binary and ensure no redirects
        curl -sSL https://github.com/zricethezav/gitleaks/releases/download/v8.1.0/gitleaks-linux-amd64 -o /tmp/gitleaks-linux-amd64

        # Check the file to ensure it's a valid binary and not an HTML page
        file /tmp/gitleaks-linux-amd64

        # If the file is valid, move it to /usr/local/bin
        sudo mv /tmp/gitleaks-linux-amd64 /usr/local/bin/gitleaks

        # Ensure the binary is executable
        sudo chmod +x /usr/local/bin/gitleaks

        # Verify the installation by checking the version
        gitleaks --version

    - name: Run Gitleaks to detect secrets
      run: |
        # Run Gitleaks to detect secrets and generate a report
        gitleaks detect --source=$GITHUB_WORKSPACE --report=$GITHUB_WORKSPACE/gitleaks-report.json

    - name: Upload Gitleaks report as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: gitleaks-report
        path: $GITHUB_WORKSPACE/gitleaks-report.json
